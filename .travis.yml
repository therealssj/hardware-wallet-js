language: node_js
node_js: "8"
dist: xenial
services:
  - xvfb
matrix:
  include:
    - os: linux
      env:
        - PIP='sudo pip'
#    # os: osx
#      env: PIP=pip
env:
  global:
    - XARGS="-screen 0 1024x768x24"
install:
  # Install OS-specific test and build dependencies
  - sh "ci-scripts/install-${TRAVIS_OS_NAME}.sh"
  # Define env vars for osx builds
  # Include paths for brew packages e.g. SDL2
  - if [[ $TRAVIS_OS_NAME == 'osx' ]]; then
    export SDL_INCLUDE="$(brew --prefix sdl2)/include/SDL2" ;
    fi
  - npm install
  - npm run make-protobuf-files
before_script:
  # Start Xvfb
  - if [[ "${TRAVIS_OS_NAME}" == "osx" ]]; then
    ( sudo Xvfb :99 -ac ${XARGS}; echo "Xvfb ok" )&
    fi
  # Install hardware wallet for running tests against emulator
  - mkdir -p tmp/hardware-wallet
  - git clone --depth=1 --single-branch --branch develop https://github.com/skycoin/hardware-wallet.git tmp/hardware-wallet
  - git -C tmp/hardware-wallet checkout develop
  - git -C tmp/hardware-wallet submodule init
  - git -C tmp/hardware-wallet submodule update
  - git -C tmp/hardware-wallet submodule update --remote
  # Install OS-specific test and build dependencies for hardware-wallet
  - ( cd ./tmp/hardware-wallet && sh "ci-scripts/install-${TRAVIS_OS_NAME}.sh" )
  # Define env vars for Linux builds
  - if [[ $TRAVIS_OS_NAME == 'linux' ]]; then
    ls -l /usr/local/bin/protoc;
    export PATH="/usr/local/bin:$(pwd)/tmp/hardware-wallet/protoc/bin:$PATH";
    fi
  - if [[ $TRAVIS_OS_NAME == 'osx' ]]; then
    export SDL_INCLUDE="$(brew --prefix sdl2)/include/SDL2" ;
    fi
  - echo "PATH=$PATH";
  - echo "PIP=$PIP";
script:
  - make -C tmp/hardware-wallet clean
  - make -C tmp/hardware-wallet/tiny-firmware/protob install-deps-nanopb
  - make -C tmp/hardware-wallet/tiny-firmware/protob install-protoc
  - make -C tmp/hardware-wallet/tiny-firmware/protob/nanopb/vendor/nanopb/generator/proto
  - make -C tmp/hardware-wallet emulator
  # On GNU/Linux wrap emulator in xvfb graphics context
  - if [[ "${TRAVIS_OS_NAME}" == "linux" ]]; then
    xvfb-run --server-args="${XARGS}" make -C ./tmp/hardware-wallet run-emulator & true ;
    fi
  # On osx Xvfb started in before_script step
  - if [[ "${TRAVIS_OS_NAME}" == "osx" ]]; then
    make -C ./tmp/hardware-wallet run-emulator & true ;
    fi
  # Run linter while emulator gets built
  - npm run lint
  - screen -ls || true
  - ps aux | grep emulator
  - make test
after_script:
  - kill -s KILL $(pgrep emulator)
  # screen -S xvfbsrv -X quit
notifications:
  # https://github.com/kvld/travisci-telegram TravisCI Telegram Bot integration
  webhooks: https://fathomless-fjord-24024.herokuapp.com/notify

